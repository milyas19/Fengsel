// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(FengselContext))]
    partial class FengselContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.2");

            modelBuilder.Entity("Entities.Celle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CelleNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FangeId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Opptatt")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Celle", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CelleNumber = 101,
                            FangeId = 1,
                            Opptatt = true
                        });
                });

            modelBuilder.Entity("Entities.Fange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Alder")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CelleId")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("FengslingsDatoFra")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("FengslingsDatoTil")
                        .HasColumnType("TEXT");

                    b.Property<int>("Kjonn")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Navn")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CelleId")
                        .IsUnique();

                    b.ToTable("Fange", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Alder = 34,
                            CelleId = 1,
                            FengslingsDatoFra = new DateOnly(2007, 2, 12),
                            FengslingsDatoTil = new DateOnly(2037, 2, 12),
                            Kjonn = 1,
                            Navn = "Olaf"
                        });
                });

            modelBuilder.Entity("Entities.Fange", b =>
                {
                    b.HasOne("Entities.Celle", "Celle")
                        .WithOne("Fange")
                        .HasForeignKey("Entities.Fange", "CelleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Celle");
                });

            modelBuilder.Entity("Entities.Celle", b =>
                {
                    b.Navigation("Fange");
                });
#pragma warning restore 612, 618
        }
    }
}
